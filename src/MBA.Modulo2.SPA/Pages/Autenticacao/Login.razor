@page "/login"
@layout AuthLayout
@using MBA.Modulo2.Spa.ExternalApi
@using MBA.Modulo2.Spa.Shared
@using MBA.Modulo2.Spa.ViewModels
@inject NavigationManager NavigationManager
@inject AuthHttpClient AuthHttpApi

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <img src="img/logo.png" alt="Logo Boa Compra" class="auth-logo" />
            <h4 class="auth-title">Entrar na sua conta</h4>
            <p class="auth-subtitle">Acesse sua conta para continuar comprando</p>
        </div>

        @if (ShowErrors)
        {
            <div class="auth-alert auth-alert-danger">
                <i class="fas fa-exclamation-circle me-2"></i>
                @Error
            </div>
        }

        <EditForm Model="loginModel" OnValidSubmit="HandleLogin" class="auth-form">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email" class="form-label">
                    <i class="fas fa-envelope me-2 text-muted"></i>Email
                </label>
                <InputText Id="email" Class="auth-input" @bind-Value="loginModel.Email" placeholder="seu@email.com" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>

            <div class="form-group">
                <label for="password" class="form-label">
                    <i class="fas fa-lock me-2 text-muted"></i>Senha
                </label>
                <InputText Id="password" type="password" Class="auth-input"
                           @bind-Value="loginModel.Password" placeholder="Digite sua senha" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>

            <button type="submit" class="auth-btn">
                <i class="fas fa-sign-in-alt"></i>
                <span>Entrar</span>
            </button>
        </EditForm>

        <div class="auth-footer">
            <p class="mb-0">
                Não tem uma conta? 
                <NavLink href="/cadastro" class="auth-link">Cadastre-se aqui</NavLink>
            </p>
        </div>
    </div>
</div>

@code {

    readonly LoginViewModel loginModel = new LoginViewModel();
    private bool ShowErrors;
    private string Error = string.Empty;

    private async Task HandleLogin()
    {
        ShowErrors = false;
        try
        {
            var result = await AuthHttpApi.LoginAsync(loginModel);

            if (result.Data.AccessToken is not null)
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                Error = "Login inválido";
                ShowErrors = true;
            }
        }
        catch (Exception ex)
        {
            Error = "Não foi possível fazer o Login : " + ex.Message;
            ShowErrors = true;
        }
    }
}
