@page "/cliente/editar/{id:guid}"
@using MBA.Modulo2.Spa.ExternalApi
@using MBA.Modulo2.Spa.ViewModels
@inject ClienteHttpClient ClienteApi
@inject NavigationManager Navigation

<PageTitle>Editar Cliente</PageTitle>

<div class="container mt-4" style="padding-bottom:8%">
    <div class="bg-primary text-white p-2 rounded-top">
        <h5 class="mb-0" style="margin-left:3%">EDITAR NOME</h5>
    </div>

    @if (cliente is null)
    {
        <p class="mt-3">Carregando informações...</p>
    }
    else
    {
        <EditForm Model="cliente" OnValidSubmit="Salvar">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3 mt-3">
                <label class="form-label fw-bold">Nome</label>
                <InputText @bind-Value="cliente.Nome" class="form-control" />
            </div>

            <div class="mt-4">
                <button class="btn btn-success me-2" type="submit">
                    Salvar
                </button>
                <button class="btn btn-primary me-2" type="button" @onclick="Cancelar">
                    Cancelar
                </button>
            </div>

        </EditForm>
    }

</div>

@code {
    [Parameter] public Guid id { get; set; }
    private ClienteViewModel cliente = new();

    protected override async Task OnInitializedAsync()
    {
        cliente = await ClienteApi.ObterPorIdAsync(id);
    }

    private async Task Salvar()
    {
        await ClienteApi.AtualizarClienteAsync(cliente);
        Navigation.NavigateTo("/cliente");
    }

    private void Cancelar()
    {
        Navigation.NavigateTo("/cliente");
    }
}
