@page "/produtoDetail/{Id:guid}"
@using MBA.Modulo2.Spa.ExternalApi
@using MBA.Modulo2.Spa.ViewModels

@inject ProdutoHttpClient ProdutoApi
@inject AuthHttpClient AuthHttpApi

@if (products == null)
{
    <p>Carregando produtos...</p>
}
else
{

    var imagePath = $"https://localhost:7009/images/";


    <div class="container mt-4">
        <div class="bg-primary text-white p-2 rounded-top">
            <h5 class="mb-0" style="margin-left:3%">PRODUTO</h5>
        </div>

        <div class="card border rounded-bottom shadow">
            <div class="text-center" style="margin:2% 20%">
                <img src="@($"{imagePath}{products.Imagem}")" class="card-img-top img-fluid" alt="@products.Nome" style="max-width: 100%; height: auto;">
            </div>

            <div class="card-body" style="margin:1% 15%">


                <div class="container">
                    <div class="row">
                        <div class="col-9"><h4 class="text-primary fw-bold">@products.Preco</h4></div>
                        <div class="col-3">
                            <div>

                                <button class="btn btn-outline-secondary me-2" title="Denunciar" @onclick="Denunciar">
                                    <img src="icons/icon_atencao.png" alt="Denunciar" style="width: 20px; height: 20px;" />
                                </button>


                                <button class="btn btn-outline-secondary me-2" title="Favoritar" @onclick="Favoritar">
                                    <img src="icons/icon_favorito.png" alt="Favoritar" style="width: 20px; height: 20px;" />
                                </button>

                            </div>
                        </div>
                    </div>
                </div>


                <h5 class="card-title text-primary mt-3">@products.Nome</h5>


                <div class="row" style="margin-top:4%">
                    <div class="col-sm-8">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Descricao</h5>
                                <p class="card-text">
                                    @products.Descricao
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Estoque</h5>
                                <p class="card-text">@products.Estoque . </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <div class="card">
                            <div class="card-body">
                                <h6 class="card-title">Categoria</h6>
                                <p class="card-text">@products.Categoria.Nome . </p>
                            </div>
                        </div>
                    </div>
                </div>






            </div>
        </div>
    </div>

    <div class="container mt-4" style="padding-bottom:8%">
        <div class="bg-primary text-white p-2 rounded-top">
            <h5 class="mb-0" style="margin-left:3%">VENDEDOR</h5>
        </div>

        <div class="card border rounded-bottom shadow">

            <div class="card-body" style="margin:1% 15%">

                <div class="card mb-3 w-100">
                    <div class="row g-0">
                        <div class="col-md-4">
                            <img src="https://img.freepik.com/vetores-gratis/circulo-azul-com-usuario-branco_78370-4707.jpg?semt=ais_hybrid&w=740" class="img-fluid rounded-start" alt="...">
                        </div>
                        <div class="col-md-8">
                            <div class="card-body d-flex flex-column h-100">
                                <h5 class="card-title">INFORMAÇÕES GERAIS</h5>
                                <div style="margin:5%">
                                    <h3 class="card-text">NOME : @products.Vendedor.Nome </h3>

                                </div>

                                <!-- Este fica na parte inferior -->
                                <p class="card-text mt-auto">
                                    <small class="text-body-secondary">Último acesso: há 3 horas</small>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card mb-3 w-100">
                    <div class="card-body">
                        <h5 class="card-title mb-3">OUTROS PRODUTOS DO VENDEDOR</h5>
                        <div class="row">
                            @foreach (var produ in products.Vendedor.produtoReduzidos)
                            {
                                <div class="col-sm-6 col-md-4 col-lg-3 mb-4">
                                    <div class="card h-100">
                                        <img src="@($"{imagePath}{produ.Imagem}")" class="card-img-top" alt="@produ.Nome" style="object-fit: cover; height: 200px;" />
                                        <div class="card-body d-flex flex-column">
                                            <h6 class="card-title">@produ.Nome</h6>
                                            <p class="card-text mt-auto"><strong>Preço:</strong> @produ.Preco.ToString("C")</p>
                                            <a href="/produtoDetail/@produ.Id">Ver Detalhes</a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>



    @if (mostrarModalLogin)
    {
        <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.6);">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content shadow-lg rounded-4">
                    <div class="modal-header bg-primary text-white rounded-top">
                        <h5 class="modal-title fw-bold">Acesso Necessário</h5>
                        <button type="button" class="btn-close" @onclick="FecharModal" aria-label="Fechar"></button>
                    </div>

                    <div class="modal-body text-center">
                        <img src="img/logo.png" alt="Logo" class="mb-3" style="width: 100px; height: auto;" />

                        <h4 class="fw-semibold text-dark">Caro Cliente</h4>
                        <p class="text-secondary">
                            Para realizar esta ação é necessário estar logado em nossa plataforma.
                        </p>


                        <a href="/login" class="btn btn-outline-primary mt-3 px-4">
                            Ir para Login &rarr;
                        </a>
                    </div>

                    <div class="modal-footer justify-content-center">
                        <button class="btn btn-secondary" @onclick="FecharModal">Fechar</button>
                    </div>
                </div>
            </div>
        </div>
    }

}

@code {
    private ProdutoDetalhesViewModel products;

    [Parameter]
    public Guid Id { get; set; }

    private bool logado = false;


    private string guidTeste = "51DFA591-8724-448A-848E-70B9B32B212B";



    protected override async Task OnParametersSetAsync()
    {
        try
        {
            products = await ProdutoApi.GetProdutoDetalheAsync(Id);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao buscar produtos: {ex.Message}");
            products = new ProdutoDetalhesViewModel();
        }
    }

    private async Task Favoritar()
    {
        var usuarioId = await AuthHttpApi.PegarIdUsuario();

        if (usuarioId == null)
        {
            mostrarModalLogin = true;
            StateHasChanged();
        }
        else
        {









        }
    }

    private async Task Denunciar()
    {
        var usuarioId = await AuthHttpApi.PegarIdUsuario();

        if (usuarioId == null)
        {
            mostrarModalLogin = true;
            StateHasChanged();
        }
        else
        {
            Console.WriteLine($"Usuário está logado com ID: {usuarioId}");
        }
    }








    private bool mostrarModalLogin = false;
    private void AbrirModal()
    {
        mostrarModalLogin = true;
    }
    private void FecharModal()
    {
        mostrarModalLogin = false;
    }




}




